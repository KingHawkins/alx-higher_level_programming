The ``100-matrix_mul`` module
==================================
Using ``matrix_mul``
-------------------------

Importing the lazy_matrix_mul function:
        >>> matrix_mul = __import__('100-matrix_mul').matrix_mul


Passing matrices:
        >>> matrix_mul([[1,2], [3,4]], [[1,2], [3,4]])
        [[7, 10], [15, 22]]


Passing a strings:
        >>> matrix_mul([['string']], [['string']])
        Traceback (most recent call last):
                ...
        TypeError: m_a and m_b should contain only integers or floats

Passing string to m_b:
        >>> matrix_mul([[1,2,3]], [['string']])
        Traceback (most recent call last):
                ...
        TypeError: m_b should contain only integers or floats

Passing a string to m_a:
        >>> matrix_mul([['string']], [[1,2,3]])
        Traceback (most recent call last):
                ...
        TypeError: m_a should contain only integers or floats

Passing empty lists:
        >>> matrix_mul([[]], [[]])
        Traceback (most recent call last):
                ...
        ValueError: m_a and m_b can't be empty

Passing an empty list to m_a:
        >>> matrix_mul([[]], [[1,2,3]])
        Traceback (most recent call last):
                ...
        ValueError: m_a can't be empty

Passing an empty list to m_b:
        >>> matrix_mul([[1,2,3]], [[]])
        Traceback (most recent call last):
                ...
        ValueError: m_b can't be empty

Passing none lists:
        >>> matrix_mul((1,2), (2,1))
        Traceback (most recent call last):
                ...
        TypeError: m_a and m_b must be a list

Passing a none list to m_a:
        >>> matrix_mul((1,1), [[1,2,3]])
        Traceback (most recent call last):
                ...
        TypeError: m_a must be a list

Passing a none list to m_b:
        >>> matrix_mul([[1,2,3]], (2,4))
        Traceback (most recent call last):
                ...
        TypeError: m_b must be a list

Passing matrices of different sizes:
        >>> matrix_mul([[1,2,3], [1,2]], [[1,2], [1,2,3]])
        Traceback (most recent call last):
                ...
        TypeError: each row of m_a and m_b must be of the same size

Passing matrices of different sizez on m_a:
        >>> matrix_mul([[1,2],[2,3,4]], [[1,2], [3,4]])
        Traceback (most recent call last):
                ...
        TypeError: each row of m_a must be of the same size

Passing matrices of diff sizes on m_b:
        >>> matrix_mul([[1,2], [2,3]], [[1,3,4], [2,3]])
        Traceback (most recent call last):
                ...
        TypeError: each row of m_b must be of the same size

Passing unequal sizes of matrices:
        >>> matrix_mul([[1,2]], [[1,2,3]])
        Traceback (most recent call last):
                ...
        ValueError: m_a and m_b can't be multiplied

Passing none lists:
        >>> matrix_mul([(1,2)], [(2,1)])
        Traceback (most recent call last):
                ...
        TypeError: m_a and m_b must be a list of lists

Passing a none list to m_a:
        >>> matrix_mul([(1,1)], [[1,2,3]])
        Traceback (most recent call last):
                ...
        TypeError: m_a must be a list of lists

Passing a none list to m_b:
        >>> matrix_mul([[1,2,3]], [(2,4)])
        Traceback (most recent call last):
                ...
        TypeError: m_b must be a list of lists
